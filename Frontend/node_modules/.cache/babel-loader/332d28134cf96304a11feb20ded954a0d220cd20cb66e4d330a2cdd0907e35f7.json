{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAGAR\\\\Desktop\\\\Management\\\\Frontend\\\\src\\\\GenerateReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateReport() {\n  _s();\n  const [reportType, setReportType] = useState('daily');\n  const [report, setReport] = useState(null);\n  const handleGenerateReport = () => {\n    // Here you can handle the report generation logic locally\n    // For demonstration, we'll just set a dummy report\n    const dummyReport = {\n      daily: [{\n        id: 1,\n        name: 'John Doe',\n        attendance: 'Present'\n      }],\n      tasks: [{\n        id: 1,\n        task: 'Task 1',\n        assignedTo: 'John Doe'\n      }],\n      employees: [{\n        id: 1,\n        name: 'John Doe',\n        position: 'Developer'\n      }]\n    };\n    setReport(dummyReport[reportType]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Report Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: reportType,\n        onChange: e => setReportType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"daily\",\n          children: \"Daily\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tasks\",\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"employees\",\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateReport,\n      children: \"Generate Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), report && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(report, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(GenerateReport, \"vWLLE+lHm7nxxwRH3s4oqaEXVF4=\");\n_c = GenerateReport;\nexport default GenerateReport;\nvar _c;\n$RefreshReg$(_c, \"GenerateReport\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GenerateReport","_s","reportType","setReportType","report","setReport","handleGenerateReport","dummyReport","daily","id","name","attendance","tasks","task","assignedTo","employees","position","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/SAGAR/Desktop/Management/Frontend/src/GenerateReport.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction GenerateReport() {\r\n  const [reportType, setReportType] = useState('daily');\r\n  const [report, setReport] = useState(null);\r\n\r\n  const handleGenerateReport = () => {\r\n    // Here you can handle the report generation logic locally\r\n    // For demonstration, we'll just set a dummy report\r\n    const dummyReport = {\r\n      daily: [{ id: 1, name: 'John Doe', attendance: 'Present' }],\r\n      tasks: [{ id: 1, task: 'Task 1', assignedTo: 'John Doe' }],\r\n      employees: [{ id: 1, name: 'John Doe', position: 'Developer' }],\r\n    };\r\n\r\n    setReport(dummyReport[reportType]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>Report Type:</label>\r\n        <select value={reportType} onChange={(e) => setReportType(e.target.value)}>\r\n          <option value=\"daily\">Daily</option>\r\n          <option value=\"tasks\">Tasks</option>\r\n          <option value=\"employees\">Employees</option>\r\n        </select>\r\n      </div>\r\n      <button onClick={handleGenerateReport}>Generate Report</button>\r\n      {report && (\r\n        <div>\r\n          <h2>Report:</h2>\r\n          <pre>{JSON.stringify(report, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenerateReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}